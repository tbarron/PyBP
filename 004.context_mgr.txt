=== #4 Compose your own context manager to control a resource

**Why**: You can apply the power of +with+ to your own resources.


==== Example 1

----
    class Chdir(object):    
        def __init__(self, target):        
        self.start = os.getcwd()        
        self.target = target
    def __enter__(self):        
        os.chdir(self.target)        
        return self.target
    def __exit__(self, type, value, traceback):        
        os.chdir(self.start)
----

==== Usage

----
    print os.getcwd()
    with Chdir("/somewhere/else"):    
        print os.getcwd()
    print os.getcwd()
----

===== Output

----
    /starting/directory
    /somewhere/else
    /starting/directory
----


==== Example 2 link:PyBP.html#ref_1[<1>]

----
    class SomeProtocol:
        def __init__(self, host, port):        
            self.host, self.port = host, port

        def __enter__(self):        
            self._client = socket()        
            self._client.connect((self.host, 
                                  self.port))

        def __exit__(self, exception, value, traceback):        
            self._client.close()

    def send(self, payload): ...

    def receive(self): ...

    with SomeProtocol(host, port) as protocol:    
        protocol.send(['get', signal])    
        result = protocol.receive() 
----




