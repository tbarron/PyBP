Define Internal Conventions
------------------------------------------------------------

To keep your project sane, you will need to make choices about the internal
structures and procedures you will use to organize and maintain your project,
and apply those consistently. This basically means defining rules that will
guide future decisions you have to make about project evolution.

Should all the code for the project go into a single file or should it be
broken up? Should all the text strings be stored in a message catalog or
just embedded in the code as literals? What is your convention for creating
variable and function names? Underscores or camel case? Tabs or spaces? 
Indentation size?

These questions don't necessarily have one right answer for all situations.
Small projects may fit in a single file while larger projects need to be
spread across multiple files. Small projects may not need a message catalog
while larger ones will be much easier to manage with a message catalog from
the beginning.

This collection of best practices is a set of suggested rules for creating
sane software that works. However, each project needs its own internal
consistency and integrity, especially as it grows. A good place for
documenting such rules and policies may be in the project README file.

**Why**:

- If your project grows beyond a single file of a few hundred lines, you'll
  find that it becomes more and more difficult to keep the details
  straight. Internal, project-specific conventions will help you keep your
  code consistent, well-organized, and functional.

**How**:

- Make the internal conventions for each program explicit by writing them
  as comments in the code itself or in the project's README.

|
|
|
