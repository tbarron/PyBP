.. include:: i_rule.txt

Write Idiomatic Python
------------------------------------------------------------

Write idiomatic Python. Approach your tasks Pythonically.

**Why**:

* Other programmers (including you two years from now, when revisiting the
  code you wrote yesterday) will find it easier to understand code written
  in terms of normal, expected Python patterns.

**How**:

* Learn what idiomatic Python looks like, then use that knowledge. A great
  place to start is `Writing Idiomatic Python
  <https://jeffknupp.com/writing-idiomatic-python-ebook/>`_ by Jeff Knupp.

* If you find yourself struggling to get an awkward, hard-to-understand
  line of code to work, suspect that there's a clearer, more succinct way
  to do it. For example, as a beginning Pythonista, I often resorted to
  using eval() to parse top level expressions to achieve introspection when
  I didn't know a more direct way::

    name = get_method_name()
    result = eval('myclass.{}({}, {})'.format(name, arg1, arg2))

  The Pythonic approach uses the getattr() built-in function::

    meth = getattr(myclass, get_method_name())
    result = meth(arg1, arg2)


