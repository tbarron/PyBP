Find a Bug, Write a Test
------------------------------------------------------------

This is an aspect of `Test Driven Development <s-general.html#test-driven-development>`_.

You just found a bug in your code. What's the first thing you do?

My first impulse has always been to start hacking on the code trying to
figure out where the problem is and what to do about it.

In the long run, a more productive response is to nail down exactly how the
problem manifests with a test that tickles the bug and fails. That way,
when we do manage to remove the bug, the new test will start working,
letting us know that we got it. And we'll have a more complete, more robust
test suite.

**Why**:

* Capturing knowledge about past bugs in tests allows us to code with
  confidence, trusting that any regressions will be exposed the next time
  we run our tests.

**How**:

* Any time you encounter a bug in your code, write a new test case and make
  sure it exhibits the bug by failing *before* making any code changes. If
  more bugs crop up in the process of constructing the new test, write a
  test for each one.

|
|
|
